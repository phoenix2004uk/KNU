{LOCAL L IS import("telemetry").LOCAL Z IS{PARAMETER A,B,D IS BODY. RETURN SQRT(D:MU*((2/(B+D:RADIUS))-(1/A))).}.LOCAL Y IS{PARAMETER A,B,D IS BODY:RADIUS. RETURN(A+B)/2+D.}.export(Lex("version","1.3.2","VisViva",Z,"GetSMA",Y,"GetManeuverTime",{PARAMETER A,B IS 1.LOCAL D IS L["currentISP"]().IF D=0 RETURN 2^64.RETURN 9.80665*SHIP:MASS*1e3*D*(1-CONSTANT:E^(-ABS(A)/(9.80665*D)))/(L["availableThrust"]()*B).},"GetHohmannDeltaV",{PARAMETER A.LOCAL B IS ALT:PERIAPSIS. IF A<ALT:APOAPSIS SET B TO ALT:APOAPSIS. LOCAL D IS (B+A)/2+BODY:RADIUS. RETURN List(Z(D,B)-Z(SHIP:OBT:SEMIMAJORAXIS,B),Z(A+BODY:RADIUS,A)-Z(D,A)).},"GetPeFromEcc",{PARAMETER A,B.RETURN A*(1-B)/(1+B).},"GetApFromEcc",{PARAMETER A,B.RETURN A*(1+B)/(1-B).},"ChangeApDeltaV",{PARAMETER A.RETURN Z(Y(ALT:PERIAPSIS,A), ALT:PERIAPSIS)-Z(SHIP:OBT:SEMIMAJORAXIS,ALT:PERIAPSIS).},"ChangePeDeltaV",{PARAMETER A.RETURN Z(Y(ALT:APOAPSIS,A),ALT:APOAPSIS)-Z(SHIP:OBT:SEMIMAJORAXIS,ALT:APOAPSIS).},"Steer",{PARAMETER A,B IS 1.LOCK STEERING TO A. LOCAL D IS A. IF D:ISTYPE("Direction")SET D TO D:VECTOR. WAIT UNTIL VANG(SHIP:FACING:FOREVECTOR,D)<=MAX(0.01,B).},"Exec",{LOCAL LOCK A TO SHIP:AVAILABLETHRUST/SHIP:MASS. LOCAL B IS NEXTNODE:DELTAV. LOCK THROTTLE TO MIN(1,NEXTNODE:DELTAV:MAG/A).LOCK STEERING TO NEXTNODE:DELTAV. UNTIL 0{IF VDOT(B,NEXTNODE:DELTAV)<0{LOCK THROTTLE TO 0.BREAK.}IF NEXTNODE:DELTAV:MAG<0.01{WAIT UNTIL VDOT(B,NEXTNODE:DELTAV)<0.5.BREAK.}}LOCK THROTTLE TO 0.})).}