{LOCAL Y IS import("maneuver").export(Lex("version","1.0.7","new",{PARAMETER A,J IS Lex(),K IS 1.LOCAL D IS List().IF A="ap"{D:ADD({RETURN Y["ChangePeDeltaV"](ALT:APOAPSIS).}).D:ADD({RETURN ETA:APOAPSIS.}).}ELSE IF A="pe"{D:ADD({RETURN Y["ChangeApDeltaV"](ALT:PERIAPSIS).}).D:ADD({RETURN ETA:PERIAPSIS.}).}ELSE RETURN FALSE. RETURN MissionRunner["new"]("circ",Lex(0,({PARAMETER A,B,D.LOCAL F IS A[0]().SET D[0]TO Y["GetManeuverTime"](F/2).LOCAL H IS A[1]().IF H>SHIP:OBT:PERIOD/2 SET H TO 9.SET D[1]TO TIME:SECONDS+H. Add NODE(D[1],0,0,F).Y["Steer"](NEXTNODE:DELTAV).SET D[2]TO ROUND(SHIP:OBT:ECCENTRICITY,5).B["save"](D).B["next"]().}):bind(D),1,({PARAMETER A,B,D.IF NOT D:HASKEY(2)B["load"](D).IF D[1]-TIME:SECONDS-D[0]<=30 B["next"]().}):bind(D),2,({PARAMETER A,B,D.IF NOT D:HASKEY(2)B["load"](D).IF D[1]-TIME:SECONDS-D[0]<=0{Y["Steer"](NEXTNODE:DELTAV).LOCK THROTTLE TO 1.WAIT 0.1.IF SHIP:OBT:ECCENTRICITY<=1E-3 OR ROUND(SHIP:OBT:ECCENTRICITY,5)>D[2]{LOCK THROTTLE TO 0.REMOVE NEXTNODE. B["next"]().}SET D[2]TO ROUND(SHIP:OBT:ECCENTRICITY,5).}}):bind(D)),1,J,K).})).}